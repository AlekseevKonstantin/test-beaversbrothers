{"ast":null,"code":"var _jsxFileName = \"C:\\\\web_project\\\\test-beaversbrothers\\\\layout-test\\\\src\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Layout } from \"~/components/Layout/Layout\";\nimport Card from '../components/card/card';\nimport { stateTop, stateMasked, bigTop } from '../state/state';\nexport default class extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"topHeight\", 0);\n\n    _defineProperty(this, \"maskedHeight\", 0);\n\n    _defineProperty(this, \"curVp\", 0);\n  }\n\n  componentDidMount() {\n    this.curVp = window.innerWidth; // debugger;\n  }\n\n  cardToProps(array, callback) {\n    return array.map((item, index) => {\n      debugger;\n      return __jsx(\"div\", {\n        className: `col ${item.className}`,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, __jsx(Card, {\n        cardProps: item.cardProps,\n        callback: callback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }));\n    });\n  }\n\n  getMaxTopHeight(height) {\n    if (height > this.topHeight) {\n      this.topHeight = height;\n    }\n  }\n\n  getMaxMaskedHeight(height) {\n    if (height > this.maskedHeight) {\n      this.maskedHeight = height;\n    }\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      className: \"headers mb--more-small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"\\u0422\\u041E\\u041F \", __jsx(\"span\", {\n      className: \"italic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"10\"), \" \\u043C\\u0435\\u0441\\u0442\"), __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, stateTop && this.cardToProps(bigTop, null)), __jsx(\"div\", {\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row\",\n      style: this.curVp > 0 && this.curVp < 767 ? {\n        height: `${this.topHeight}px`\n      } : undefined,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, stateTop && this.cardToProps(stateTop, this.getMaxTopHeight))), __jsx(\"h2\", {\n      className: \"headers mb--more-medium mt--big\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"italic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"\\u0421\\u043A\\u043E\\u0440\\u043E\"), \" \\u043D\\u0430 \\u0441\\u0430\\u0439\\u0442\\u0435\"), __jsx(\"div\", {\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, stateMasked && this.cardToProps(stateMasked, this.getMaxMaskedHeight)))));\n  }\n\n}","map":{"version":3,"sources":["C:/web_project/test-beaversbrothers/layout-test/src/pages/index.tsx"],"names":["React","Component","Layout","Card","stateTop","stateMasked","bigTop","componentDidMount","curVp","window","innerWidth","cardToProps","array","callback","map","item","index","className","cardProps","getMaxTopHeight","height","topHeight","getMaxMaskedHeight","maskedHeight","render","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { Layout } from \"~/components/Layout/Layout\"\nimport Card from '../components/card/card'\n\nimport { stateTop, stateMasked, bigTop, IColCardProps} from '../state/state'\n\nexport default class extends Component {\n\n  topHeight: number = 0;\n  maskedHeight: number = 0;\n  curVp: number = 0;\n\n  componentDidMount () {\n    this.curVp = window.innerWidth;\n    // debugger;\n  }\n  \n  cardToProps(array: any, callback: any) {\n    return array.map((item: IColCardProps, index: number) => {\n      debugger;\n      return (\n        <div className={`col ${item.className}`} key={index}>\n          <Card cardProps={item.cardProps} callback={callback} />\n        </div>\n      )\n    })\n  }\n\n  getMaxTopHeight (height: number) {\n    if (height > this.topHeight) {\n      this.topHeight = height\n    }\n  }\n\n  getMaxMaskedHeight (height: number) {\n    if (height > this.maskedHeight) {\n      this.maskedHeight = height\n    }\n  }\n\n  render() {\n    return (\n      <Layout>\n        <div className=\"container\">\n          <h2 className=\"headers mb--more-small\">ТОП <span className=\"italic\">10</span> мест</h2>\n\n          <div className=\"row\">\n            { stateTop && this.cardToProps(bigTop, null)}\n          </div>\n\n          <div className=\"list\">\n            <div className=\"row\" style={this.curVp > 0 && this.curVp < 767 ? {height: `${this.topHeight}px`} : undefined }>\n              { stateTop && this.cardToProps(stateTop, this.getMaxTopHeight)}\n            </div>\n          </div>\n\n          <h2 className=\"headers mb--more-medium mt--big\"><span className=\"italic\">Скоро</span> на сайте</h2>\n\n          <div className=\"list\">\n            <div className=\"row\">\n              { stateMasked && this.cardToProps(stateMasked, this.getMaxMaskedHeight)}\n            </div>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}